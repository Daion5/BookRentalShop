@using System.Security.Claims
@model IEnumerable<BookRentalShop.Models.BorrowedBooks>

@{
    ViewData["Title"] = "Cart";
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var overdueFees = ViewData["TotalOverdueFees"] as decimal? ?? 0;
}


<h1>Your Cart</h1>

<div>
    <span style="color: green;">&#36;</span>
    <span style="color: @(overdueFees > 0 ? "red" : "green");">
        @(overdueFees > 0 ? $"-{overdueFees}zł" : "0")
    </span>
</div>

@if (!Model.Any())
{
    <p>You have no borrowed books.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Author</th>
                <th>Borrow Date</th>
                <th>Return Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Book.Title</td>
                    <td>@item.Book.Author</td>
                    <td>@item.BorrowDate.ToShortDateString()</td>
                    <td>@item.ReturnDate.ToShortDateString()</td>
                    <td>
                        <form asp-action="Return" asp-route-id="@item.BorrowedBookId" method="post">
                            <button type="submit" class="btn btn-danger">Return</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}